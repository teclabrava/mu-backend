name: Deployment Serverless
on:
  push:
    branches:
      - 'staging'
      - 'develop'
jobs:
  test-lint:
    name: Run Lint tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Run PHPUnit tests
        run: |
          cd src/
          composer install
          composer require overtrue/phplint:^4.0 --dev -vvv
          vendor/bin/phplint
  test-unit:
    name: Run Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Run PHPUnit tests
        run: |
          cd src/
          composer install
          vendor/bin/phpunit
  deploy:
    name: Deploy of Serverless
    needs: [test-lint, test-unit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Move files
        run: |
          mv src/* ./
          mv serverless/* ./
      - name: Install nodejs dependencies
        run: |
          npm install -g serverless
          npm install

      - name: Install PHP dependencies
        run: |
          composer install --no-scripts

      - name: Prepare environment
        run: |
          cp env.example .env
          echo APP_ENV=${GITHUB_REF##*/} >> .env
          echo APP_DEBUG=true >> .env

          echo DYNAMODB_PREFIX=${GITHUB_REF##*/} >> .env
          echo DYNAMODB_CONNECTION=${{ secrets.DYNAMODB_CONNECTION }} >> .env
          echo DYNAMODB_REGION=${{ secrets.AWS_REGION }} >> .env
          echo DYNAMODB_KEY=${{ secrets.DYNAMODB_KEY }} >> .env
          echo DYNAMODB_SECRET=${{ secrets.DYNAMODB_SECRET }} >> .env

          echo BUCKET_KEY=${{ secrets.BUCKET_KEY }} >> .env
          echo BUCKET_SECRET=${{ secrets.BUCKET_SECRET }} >> .env
          echo BUCKET_REGION=${{ secrets.BUCKET_REGION }} >> .env
          echo BUCKET_NAME=${{ secrets.BUCKET_NAME }} >> .env

          if [ ${GIHUB_REF##*/} == "staging" ]
          then
            echo BUCKET_URL=https://staging.teclabrava.com >> .env
          elif [ ${GIHUB_REF##*/} == "develop" ]
          then
            echo BUCKET_URL=https://develop.teclabrava.com >> .env
          fi
      - name: Deployment in AWS
        run: |
          if [ ${GIHUB_REF##*/} == "staging" ]
          then
            rm -f serverless.yml
            cp serverless.staging.yml serverless.yml
          fi
          serverless deploy --verbose --config=serverless.yml --stage ${GITHUB_REF##*/}

