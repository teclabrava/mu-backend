<?php
/** @var \Laravel\Lumen\Routing\Router $router */
/**
 * Mañu
 * Mañu es el juego .... [http://swagger.io](http://swagger.io) or on  [irc.freenode.net, #swagger](http://swagger.io/irc/).
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@teclabrava.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Mañu
 * @version 1.0.0
 */

$router->get('/', function () use ($router) {
    return $router->app->version();
});


/**
 * post addplayer
 * Summary: Add a new player to the store
 * Notes:
 * Output-Formats: [application/json, application/xml]
 */
$router->post('/teclabrava/manu/1.0.0/player', 'PlayerApi@addplayer');
/**
 * put updateplayer
 * Summary: Update an existing player
 * Notes:
 * Output-Formats: [application/json, application/xml]
 */
$router->put('/teclabrava/manu/1.0.0/player', 'PlayerApi@updateplayer');
/**
 * get findplayersByStatus
 * Summary: Finds players by status
 * Notes: Multiple status values can be provided with comma separated strings
 * Output-Formats: [application/json, application/xml]
 */
$router->get('/teclabrava/manu/1.0.0/player/findByStatus', 'PlayerApi@findplayersByStatus');
/**
 * get findplayersByTags
 * Summary: Finds players by tags
 * Notes: Muliple tags can be provided with comma separated strings. Use\\ \\ tag1, tag2, tag3 for testing.
 * Output-Formats: [application/json, application/xml]
 */
$router->get('/teclabrava/manu/1.0.0/player/findByTags', 'PlayerApi@findplayersByTags');
/**
 * delete deleteplayer
 * Summary: Deletes a player
 * Notes:
 * Output-Formats: [application/json, application/xml]
 */
$router->delete('/teclabrava/manu/1.0.0/player/{playerId}', 'PlayerApi@deleteplayer');
/**
 * get getplayerById
 * Summary: Find player by ID
 * Notes: Returns a single player
 * Output-Formats: [application/json, application/xml]
 */
$router->get('/teclabrava/manu/1.0.0/player/{playerId}', 'PlayerApi@getplayerById');
/**
 * post updateplayerWithForm
 * Summary: Updates a player in the store with form data
 * Notes:
 * Output-Formats: [application/json, application/xml]
 */
$router->post('/teclabrava/manu/1.0.0/player/{playerId}', 'PlayerApi@updateplayerWithForm');
/**
 * post uploadFile
 * Summary: uploads an image
 * Notes:
 * Output-Formats: [application/json]
 */
$router->post('/teclabrava/manu/1.0.0/player/{playerId}/uploadImage', 'PlayerApi@uploadFile');
/**
 * post createUser
 * Summary: Create user
 * Notes: This can only be done by the logged in user.
 * Output-Formats: [application/json, application/xml]
 */
$router->post('/teclabrava/manu/1.0.0/user', 'UserApi@createUser');
/**
 * post createUsersWithArrayInput
 * Summary: Creates list of users with given input array
 * Notes:
 * Output-Formats: [application/json, application/xml]
 */
$router->post('/teclabrava/manu/1.0.0/user/createWithArray', 'UserApi@createUsersWithArrayInput');
/**
 * post createUsersWithListInput
 * Summary: Creates list of users with given input array
 * Notes:
 * Output-Formats: [application/json, application/xml]
 */
$router->post('/teclabrava/manu/1.0.0/user/createWithList', 'UserApi@createUsersWithListInput');
/**
 * get loginUser
 * Summary: Logs user into the system
 * Notes:
 * Output-Formats: [application/json, application/xml]
 */
$router->get('/teclabrava/manu/1.0.0/user/login', 'UserApi@loginUser');
/**
 * get logoutUser
 * Summary: Logs out current logged in user session
 * Notes:
 * Output-Formats: [application/json, application/xml]
 */
$router->get('/teclabrava/manu/1.0.0/user/logout', 'UserApi@logoutUser');
/**
 * delete deleteUser
 * Summary: Delete user
 * Notes: This can only be done by the logged in user.
 * Output-Formats: [application/json, application/xml]
 */
$router->delete('/teclabrava/manu/1.0.0/user/{username}', 'UserApi@deleteUser');
/**
 * get getUserByName
 * Summary: Get user by user name
 * Notes:
 * Output-Formats: [application/json, application/xml]
 */
$router->get('/teclabrava/manu/1.0.0/user/{username}', 'UserApi@getUserByName');
/**
 * put updateUser
 * Summary: Updated user
 * Notes: This can only be done by the logged in user.
 * Output-Formats: [application/json, application/xml]
 */
$router->put('/teclabrava/manu/1.0.0/user/{username}', 'UserApi@updateUser');

